select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 8)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 7)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 6)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 4)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 3)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 2)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 1)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 7)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 8)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 9)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 2)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 3)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 4)) %>%
arrange(desc(q24_sentiment))
sentiments %>%
select(q24_sentiment,
q24_other_reflections) %>%
group_by(q24_sentiment) %>%
summarise("Number of Responses" = n(),
"Example Response" = nth(q24_other_reflections, n = 1)) %>%
arrange(desc(q24_sentiment))
knitr::opts_chunk$set(echo = TRUE)
options(width = 100)
library(dplyr)
library(knitr)
library(kableExtra)
devtools::load_all(export_all = FALSE)
raw_data <- readxl::read_xlsx("C:/Users/cbrownlie/OneDrive - Department for Education/Documents/Labs 2019/trust_survey_responses.xlsx")
sample <- 27:37
sentiments <- clean_data %>%
sentiment_score(q24_other_reflections,
output = "q24_sentiment_rank",
display = "rank")
library(gtable)
library(gridExtra)
library(grid)
devtools::load_all(".")
x <- data.frame(one = c("a", "b", "c", "d"),
two = c("p", "q", "r", "s"))
x %>%
tableGrob()
x %>%
tableGrob() %>%
plot()
x %>%
tableGrob(theme = theme_blank()) %>%
plot()
x %>%
tableGrob(theme = ttheme_blank()) %>%
plot()
x %>%
tableGrob(theme = ttheme_minimal()) %>%
plot()
?plot
x %>%
tableGrob(theme = ttheme_minimal()) %>%
plot(type = "n")
x %>%
tableGrob(theme = ttheme_minimal()) %>%
plot(type = "n")
par(bg = "hite")
par(bg = "white")
x %>%
tableGrob(theme = ttheme_minimal()) %>%
plot(type = "n")
test <- data.frame(column1 = c("Chris", "Ben", "Alex"), score1 = c(10,5,4), score2 = c(5,2,3), word1 = c("flanker", "hooker", "centre"), stringsAsFactors = F)
object <- test
alias = c("column1" = "name", "score2" = "speed")
alias != c("") & length(alias) != cols & length(names(alias))==0
cols <- ncol(object)
rows <- nrow(object)
alias != c("") & length(alias) != cols & length(names(alias))==0
length(names(alias))
length(alias) != cols
alias != c("")
(alias != c("") & length(alias) != cols & length(names(alias))==0)
new_object <- object %>%
rename(alias)
library(magrittr)
new_object <- object %>%
rename(alias)
library(dplyr)
new_object <- object %>%
rename(alias)
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
cols <- ncol(object)
rows <- nrow(object)
rm(new_object)
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))!=0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if (length(names(alias))!=0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
}
length(alias)==1
length(names(alias))!=0
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
}
alias = c("first", "second", "third", "fourth")
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
}
length(names(alias))==0
(length(names(alias))==0&length(alias) != cols)
sum(names(alias) %in% names(object))!=length(alias)
(length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias))
length(alias) != cols
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if ((length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) & length(alias) != cols) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
}
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if ((length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) & length(alias) != cols) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
alias <- c("first", "second")
if (length(alias)==1) {
if (alias != c("")) {
if (length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
}
} else {
new_object <- object
}
} else {
if ((length(names(alias))==0|sum(names(alias) %in% names(object))!=length(alias)) & length(alias) != cols) {
stop("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object.")
} else if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
error_flag <- FALSE
if (named == FALSE & length != cols) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- alias[!alias %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
alias <- c("false" = "true")
error_flag <- FALSE
if (named == FALSE & length != cols) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- alias[!alias %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
library(gridExtra)
library(grid)
test <- data.frame(col1 = c("chris", "ben", "alex"), score1 = c(2,3,8), score2 = c(9,1,2), word1 = c("flanker", "hooker", "centre"), stringsAsFactors = F)
object <- test
title <- quo_name(enquo(object))
library(dplyr)
title <- quo_name(enquo(object))
devtools::load_all(".")
devtools::load_all(".")
prettify(test)
devtools::load_all(".")
prettify(test)
library(gridExtra)
prettify(test)
library(grid)
library(gtable)
prettify(test)
devtools::load_all(".")
prettify(test)
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(20, "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(strwrap(title, width = unit(cols*0.2, "cm")), gp = gpar(fontsize = 10)),
1, 1, 1, 2)
plot(out_table)
}
devtools::load_all(".")
prettify(test)
devtools::load_all(".")
prettify(test)
devtools::load_all(".")
prettify(test)
devtools::load_all(".")
prettify(test)
devtools::load_all(".")
prettify(test)
?gtable_add_rows
devtools::load_all(".")
prettify(test)
