#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, nchar(title)), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 40, simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test)
}
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/10)*10), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 40, simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/5)*5), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 40, simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/10)*5), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 40, simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/10)*3), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 40, simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
test_wide <- data.frame(name = c("chris", "lizzy"), score = c(1,2), score2 = c(4,1), score3 = c(9,10), score4 = c(8,6), score5 = c(2,3), word1 = c("yes", "no"), word2 = c("false", "true"), word3 = c("one", "two"), stringsAsFactors = FALSE)
prettify(test_wide, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/10)*3), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 10*(cols+1), simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test_wide, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
#' @importFrom dplyr %>%
#'
#' @param object dataframe
#' @param alias character vector indicating what the columns should be renamed, must be a named vector or
#' the same length as the number of columns
#' @param title a string denoting the title of the table
#'
#' @return Newly formatted object
#'
#' @export
prettify <- function(object,
alias = c(""),
title = "") {
obj_name <- quo_name(enquo(object))
cols <- ncol(object)
rows <- nrow(object)
# Checks on alias argument
named <- length(names(alias))>0
length <- length(alias)
matched <- sum(names(alias) %in% names(object))
unmatched <- names(alias)[!names(alias) %in% names(object)]
error_flag <- FALSE
if (named == FALSE & length != cols & alias != c("")) {
error_flag <- TRUE
error_string <- paste0("\n'alias' is not a named character vector and has length ", length, " whereas object has ", cols, " columns.")
} else if (named == TRUE & matched != length(alias)) {
error_flag <- TRUE
error_string <- paste0("\nThe names of 'alias' do not all match to columns in 'object'. The following columns are not present in object: '", paste(unmatched, collapse = "', '"), "'.")
}
if (error_flag == TRUE) {
stop(paste0("Error: Argument 'alias' must be a character vector that is either named (with each name corresponding to a column in object), or have the same length as the number of columns in object. The following issue was found: ", error_string))
} else if (error_flag == FALSE) {
if (length(alias)==1) {
if (alias != c("")) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
}
} else {
if (length(alias)!=cols) {
new_object <- object
names(new_object)[names(new_object) %in% names(alias)] <- alias
} else {
new_object <- object
names(new_object) <- alias
}
}
}
# Checks on title argument
if (title == "") {
title <- obj_name
}
# Make a table from the object
out_table <- object %>%
tableGrob(rows = NULL) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = rows + 1, l = 1, r = cols) %>%
gtable_add_grob(grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = 1, l = 1, r = cols) %>%
gtable_add_rows(
heights = unit(max(10, round(nchar(title)/10)*2), "mm"),
pos = 0) %>%
gtable_add_grob(
textGrob(paste(strwrap(title, width = 10*(cols+1), simplify = TRUE), collapse = "\n"), gp = gpar(fontsize = 10)),
t = 1, b = 1, l = 1, r = cols)
plot(out_table)
}
prettify(test_wide, title = "this is a testing title to see how well the function can deal with long titles in the names of tables")
string <- c("this", "is", "not", "useful")
is.character(string)
save(test, "test.rda")
save(test, file="test.rda")
load("~/Labs 2019/surveyr/test.rda")
devtools::load_all(".")
devtools::load_all(".")
prettify(test)
library(grid)
library(gridExtra)
prettify(test)
library(gtable)
prettify(test)
devtools::load_all(".")
anonymise(test, name, add_names = c("ben", "alex"))
anonymise(test, name, add_names = c("ben", "alex"), auto = FALSE)
test <- test %>% mutate(sentence = paste0(name, " has been on holiday"))
anonymise(test, word1, add_names = c("ben", "alex"), auto = FALSE)
anonymise(test, sentence, add_names = c("ben", "alex"), auto = FALSE)
anonymise(test, sentence, add_names = c("ben", "alex", "been"), auto = FALSE)
anonymise(test, sentence, add_names = c("ben", "alex", "has been"), auto = FALSE)
devtools::load_all(".")
anonymise(test, sentence, add_names = c("ben", "alex", "has been"), auto = FALSE)
anonymise(test, sentence, add_names = c("ben", "alex", "has been on"), auto = FALSE)
anonymise(test, sentence, add_names = c("ben", "alex", "has"), auto = FALSE)
anonymise(test, name, add_names = c("ben", "alex"), auto = FALSE)
devtools::load_all(".")
anonymise(test, sentence, add_names = c("ben", "alex", "has"), auto = FALSE)
save(test, file="test.rda")
