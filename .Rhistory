load_internal_data()
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix) %>%
usethis::use_data(internal = TRUE, overwrite = TRUE)
rm('model_q12_main_challenges')
load_internal_data <- function() {
print(ls())
print(ls(envir = globalenv()))
load("R/sysdata.rda")
print(ls())
}
load_internal_data()
rm(modelq12_main_challenges)
load("R/sysdata.rda")
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix) %>%
usethis::use_data(internal = TRUE)
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix) %>%
usethis::use_data(internal = TRUE, overwrite = TRUE)
rm(model_q12_main_challenges)
load("R/sysdata.rda")
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix)
usethis::use_data(get(paste0("model_", dplyr::quo_name(column))), internal = TRUE, overwrite = TRUE)
usethis::use_data(paste0("model_", dplyr::quo_name(column)), internal = TRUE, overwrite = TRUE)
paste0("model_", dplyr::quo_name(column)
)
usethis::use_data(enquo(paste0("model_", dplyr::quo_name(column))), internal = TRUE, overwrite = TRUE)
enquo(paste0("model_", dplyr::quo_name(column)))
quo(paste0("model_", dplyr::quo_name(column)))
usethis::use_data(quo(paste0("model_", dplyr::quo_name(column))), internal = TRUE, overwrite = TRUE)
usethis::use_data({{quo(paste0("model_", dplyr::quo_name(column)))}}, internal = TRUE, overwrite = TRUE)
assign(paste0("model_", dplyr::quo_name(column)), value = "hi")
assign(paste0("model_", dplyr::quo_name(column)), value = "hi") %>%
usethis::use_data(quo(paste0("model_", dplyr::quo_name(column))), internal = TRUE, overwrite = TRUE)
assign(paste0("model_", dplyr::quo_name(column)), value = "hi") %>%
usethis::use_data(internal = TRUE, overwrite = TRUE)
usethis::use_data_raw()
load_internal_data <- function() {
oldls <- ls(envir = globalenv())
load("R/sysdata.rda")
newls <- ls(envir = globalenv())
print(paste0("Loading: ", paste(setdiff(oldls, newls), collapse = ", ")))
}
load_internal_data()
usethis::use_data(model_matrix, internal = TRUE, overwrite = TRUE)
rm(model_matrix)
load_internal_data <- function() {
oldls <- ls(envir = globalenv())
load("R/sysdata.rda")
newls <- ls(envir = globalenv())
print(paste0("Loading: ", paste(setdiff(oldls, newls), collapse = ", ")))
}
load_internal_data()
load_internal_data <- function() {
oldls <- ls()
dta <- load("R/sysdata.rda")
newls <- ls()
print(paste0("Loading: ", paste(setdiff(oldls, newls), collapse = ", ")))
return(dta)
}
load_internal_data()
x <- load_internal_data()
name_internal_data <- function() {
dta <- load("R/sysdata.rda")
return(dta)
}
load_internal_data()
name_internal_data <- function() {
dta <- load("R/sysdata.rda")
return(dta)
}
nme_internal_data()
name_internal_data()
usethis::use_data(model_matrix, num_topics, num_words, internal = TRUE, overwrite = TRUE)
usethis::use_data(num_topics, num_words, internal = TRUE, overwrite = TRUE)
name_internal_data()
load_internal_data <- function() {
dta <- load("R/sysdata.rda")
load("R/sysdata.rda", envir = globalenv())
return(dta)
}
rm(num_words)
rm(num_topics)
load_internal_data()
load_internal_data <- function() {
internalnames <<- load("R/sysdata.rda")
load("R/sysdata.rda", envir = globalenv())
}
load_internal_data()
mget(internalnames)
usethis::use_data(mget(internalnames), internal = TRUE, overwrite = TRUE)
usethis::use_data(get(num_words), internal = TRUE, overwrite = TRUE)
as.name(num_words)
save(list(num_words), file = "R/sysdata.rda")
list(num_words)
save(num_words, file = "R/sysdata.rda")
rm(num_words)
load_internal_data()
save(num_words, num_topics, file = "R/sysdata.rda")
rm(num_words)
rm(num_topics)
load_internal_data()
save(get(num_words), file = "R/sysdata.rda")
save(get("num_words"), file = "R/sysdata.rda")
model_matrix <- dataframe %>%
dplyr::transmute(id = 1:nrow(.),
{{ column }}) %>%
tidytext::unnest_tokens(output = "word",
input = {{ column }},
token = "words") %>%
dplyr::group_by(id, word) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(!word %in% tm::stopwords("en")) %>%
tidytext::cast_dtm(document = "id",
term = "word",
value = "count") %>%
topicmodels::LDA(k = num_topics, control = list(seed = 1066)) %>%
tidytext::tidy(matrix = "beta")
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix)
rm(model_matrix)
rm(model_q12_main_challenges)
model_matrix <- dataframe %>%
dplyr::transmute(id = 1:nrow(.),
{{ column }}) %>%
tidytext::unnest_tokens(output = "word",
input = {{ column }},
token = "words") %>%
dplyr::group_by(id, word) %>%
dplyr::summarise(count = n()) %>%
dplyr::filter(!word %in% tm::stopwords("en")) %>%
tidytext::cast_dtm(document = "id",
term = "word",
value = "count") %>%
topicmodels::LDA(k = num_topics, control = list(seed = 1066)) %>%
tidytext::tidy(matrix = "beta")
assign(paste0("model_", dplyr::quo_name(column)), value = model_matrix)
paste0("model_", dplyr::quo_name(column))
save(list = paste0("model_", dplyr::quo_name(column)), file = "R/sysdata.rda")
rm(model_matrix)
rm(model_q12_main_challenges)
load_internal_data()
devtools::load_all(".")
rm(listls())
rm(list=ls())
devtools::load_all(".")
devtools::load_all(".")
load_internal_data()
topicnames <- paste0("topic", 1:100)
usethis::use_data(topicnames, internal = TRUE, overwrite = TRUE)
devtools::load_all(".")
?devtools::load_all()
devtools::load_all(export_all = FALSE)
load("~/Labs 2019/surveyr/R/sysdata.rda")
# Load surveyr package
devtools::load_all(export_all = FALSE)
# Load dplyr to assist
library(dplyr)
# Import raw data
data <- readxl::read_xlsx("../demo_data.xlsx")
# Show questions
names(data)
# Transform into clean format
new_data <- data %>%
rename("user" = 1,
"q1_position_in_trust" = 2,
"q2_rsc_office_met" = 3,
"q12_main_challenges" = 4,
"q15_not_expectations" = 5,
"q22_changes" = 6,
"q24_reflections" = 7)
# Focussing on Q24: Do you have any other reflections about your meetings with your RSC office?
# Take a look at some of the data for comparisons later
sample <- 27:37
new_data[sample,"q24_reflections"]
# anonymise() ---------------------------------------------------------------------------------------
# See names 'Joe Bloggs' and 'John Doe' - column needs to be anonymised
# Default behaviour
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# If we want to distinguish between the different people (i.e. for analysis, see if one person mentioned alot etc.)
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE)
anon_data[sample,"q24_reflections"] # Random numbers assigned
# If we want to make the column gender neutral as well
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# If we want to anonymise certain names (i.e. we have a list of certain names)
names_to_anonymise <- c("Joe Bloggs", "the RSC")
anon_data <- new_data %>%
anonymise(q24_reflections,
auto = FALSE, # So that the function doesn't automatically overwrite every name it finds
add_names = names_to_anonymise, # Manually defined names to anonymise
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# Default behaviour for rest of the demo
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
clean_data[sample,"q24_reflections"]
# If we want to keep 'null responses'
clean_data <- anon_data %>%
clean_column(q24_reflections,
null_response = FALSE)
clean_data[sample,"q24_reflections"]
# themes ----------------------------------------------------------------------
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
# themes ----------------------------------------------------------------------
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
# themes ----------------------------------------------------------------------
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
source('~/.active-rstudio-document', echo=TRUE)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
?load
environmentName()
environmentName(env = 1)
environmentName(env = -1)
environmentName(env = 0)
environmentName(env = 2)
env.profile()
env.profile(globalenv)
env.profile(globalenv())
environmentName(globalenv())
environmentName(load_internal_data())
environmentName(determine_themes())
environmentName(determine_themes())
environmentName('determine_themes()')
environmentName(env = determine_themes())
environment()
parent.env()
parent.env(environment())
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
clean_data %>%
summarise_themes(q12_main_challenges)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
clean_data %>%
summarise_themes(q12_main_challenges)
quote(internalnames <- load("R/sysdata.rda"))
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load surveyr package
devtools::load_all(export_all = FALSE)
clean_data %>%
summarise_themes(q12_main_challenges)
# Load dplyr to assist
library(dplyr)
# Import raw data
data <- readxl::read_xlsx("../demo_data.xlsx")
# Show questions
names(data)
# Transform into clean format
new_data <- data %>%
rename("user" = 1,
"q1_position_in_trust" = 2,
"q2_rsc_office_met" = 3,
"q12_main_challenges" = 4,
"q15_not_expectations" = 5,
"q22_changes" = 6,
"q24_reflections" = 7)
# anonymise() ---------------------------------------------------------------------------------------
# See names 'Joe Bloggs' and 'John Doe' - column needs to be anonymised
# Default behaviour
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# If we want to distinguish between the different people (i.e. for analysis, see if one person mentioned alot etc.)
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE)
anon_data[sample,"q24_reflections"] # Random numbers assigned
# If we want to make the column gender neutral as well
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# If we want to anonymise certain names (i.e. we have a list of certain names)
names_to_anonymise <- c("Joe Bloggs", "the RSC")
anon_data <- new_data %>%
anonymise(q24_reflections,
auto = FALSE, # So that the function doesn't automatically overwrite every name it finds
add_names = names_to_anonymise, # Manually defined names to anonymise
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# Default behaviour for rest of the demo
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
clean_data[sample,"q24_reflections"]
# If we want to keep 'null responses'
clean_data <- anon_data %>%
clean_column(q24_reflections,
null_response = FALSE)
clean_data[sample,"q24_reflections"]
sample <- 27:37
new_data[sample,"q24_reflections"]
# anonymise() ---------------------------------------------------------------------------------------
# See names 'Joe Bloggs' and 'John Doe' - column needs to be anonymised
# Default behaviour
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# If we want to distinguish between the different people (i.e. for analysis, see if one person mentioned alot etc.)
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE)
anon_data[sample,"q24_reflections"] # Random numbers assigned
# If we want to make the column gender neutral as well
anon_data <- new_data %>%
anonymise(q24_reflections,
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# If we want to anonymise certain names (i.e. we have a list of certain names)
names_to_anonymise <- c("Joe Bloggs", "the RSC")
anon_data <- new_data %>%
anonymise(q24_reflections,
auto = FALSE, # So that the function doesn't automatically overwrite every name it finds
add_names = names_to_anonymise, # Manually defined names to anonymise
identify = TRUE,
gender = TRUE)
anon_data[sample,"q24_reflections"]
# Default behaviour for rest of the demo
anon_data <- new_data %>%
anonymise(q24_reflections)
anon_data[sample,"q24_reflections"]
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
clean_data[sample,"q24_reflections"]
# If we want to keep 'null responses'
clean_data <- anon_data %>%
clean_column(q24_reflections,
null_response = FALSE)
clean_data[sample,"q24_reflections"]
summarise_themes(clean_data, q12_main_challenges)
topicnames <- paste0("topic", 1:100)
# Load surveyr package
devtools::load_all(export_all = FALSE)
# Load surveyr package
devtools::load_all(export_all = FALSE)
# Load surveyr package
devtools::load_all(export_all = FALSE)
summarise_themes(clean_data, q12_main_challenges)
rm(topicnames)
# Load surveyr package
devtools::load_all(export_all = FALSE)
summarise_themes(clean_data, q12_main_challenges)
summarise_themes(clean_data, q12_main_challenges)
summarise_themes(clean_data, q24_reflections)
summarise_themes(clean_data, q24_reflections)
# Load surveyr package
devtools::load_all(export_all = FALSE)
# Load surveyr package
devtools::load_all(export_all = FALSE)
dataframe = clean_data
column <- q12_main_challenges
column <- quo(q12_main_challenges)
load_internal_data()
# Load surveyr package
devtools::load_all()
load_internal_data()
output = ''
topic_aliases = ''
!paste0("model_", dplyr::quo_name(dplyr::enquo(column))) %in% internalnames
message(paste0("Warning: There is currently no topic model for column ", dplyr::quo_name(column), ", function determine_topics will be run first with default arguments."))
determine_themes(dataframe = dataframe,
column = dplyr::enquo(column))
determine_topics(dataframe = dataframe,
column = dplyr::enquo(column))
load_internal_data()
model_matrix <- get(paste0("model_", dplyr::quo_name(column)))
topicmodels::topics(model_matrix)
devtools::load_all(".")
# Import raw data
data <- readxl::read_xlsx("../demo_data.xlsx")
# Show questions
names(data)
# Transform into clean format
new_data <- data %>%
rename("user" = 1,
"q1_position_in_trust" = 2,
"q2_rsc_office_met" = 3,
"q12_main_challenges" = 4,
"q15_not_expectations" = 5,
"q22_changes" = 6,
"q24_reflections" = 7)
# Focussing on Q24: Do you have any other reflections about your meetings with your RSC office?
# Take a look at some of the data for comparisons later
sample <- 27:37
new_data[sample,"q24_reflections"]
# Default behaviour for rest of the demo
anon_data <- new_data %>%
anonymise(q24_reflections)
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
devtools::load_all(".")
new_data <- data %>%
mutate(column = new_col)
devtools::load_all(".")
devtools::load_all(".")
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
View(clean_data)
devtools::load_all(".")
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
View(clean_data)
devtools::load_all(".")
devtools::load_all(".")
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
devtools::load_all(".")
devtools::load_all(".")
# clean_column() -----------------------------------------------------------------------------------------
# After anonymising, column needs to be standardised (lower case, punctuation etc.) before it can be analysed
clean_data <- anon_data %>%
clean_column(q24_reflections)
devtools::load_all(".")
summarise_themes(clean_data, q24_reflections)
summarise_topics(clean_data, q24_reflections)
devtools::load_all(".")
summarise_topics(clean_data, q24_reflections)
devtools::load_all(".")
summarise_topics(clean_data, q24_reflections)
summarise_topics(clean_data, q12_main_challenges)
load("~/Labs 2019/surveyr/R/sysdata.rda")
